edge:
  styles:
    card:
      - width: 0px

icon:
  color: var(--google-grey)
  show_icon: true
  show_name: false
  show_label: false
  size: 20px
  custom_fields:
    notification: >
      [[[
        if (entity.state =='unavailable'){
          return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
        }
      ]]]
  state:
    - styles:
        custom_fields:
          notification:
            - border-radius: 50%
            - position: absolute
            - left: 24px
            - top: -2px
            - height: 16px
            - width: 16px
            - border: 2px solid var(--card-background-color)
            - font-size: 12px
            - line-height: 14px
            - background-color: >
                [[[
                  return "rgba(var(--color-red),1)";
                ]]]
      value: unavailable
  styles:
    card:
      - border-radius: 21px
      - box-shadow: none
      - padding: 0px
    grid:
      - grid-template-areas: '"i"'
      - grid-template-columns: min-content
      - grid-template-rows: min-content
    icon:
      - color: 'rgba(var(--color-theme),0.2)'
    img_cell:
      - background-color: 'rgba(var(--color-theme),0.05)'
      - border-radius: 50%
      - place-self: center
      - width: 42px
      - height: 42px

########################################################################################################

icon_info:
  color: var(--google-grey)
  show_icon: true
  show_name: true
  show_label: true
  size: 20px
  custom_fields:
    notification: >
      [[[
        if (entity.state =='unavailable'){
          return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
        }
      ]]]
  state:
    - styles:
        custom_fields:
          notification:
            - border-radius: 50%
            - position: absolute
            - left: 24px
            - top: -2px
            - height: 16px
            - width: 16px
            - border: 2px solid var(--card-background-color)
            - font-size: 12px
            - line-height: 14px
            - background-color: >
                [[[
                  return "rgba(var(--color-red),1)";
                ]]]
      value: unavailable
  styles:
    card:
      - border-radius: 21px 8px 8px 21px 
      - box-shadow: none
      - padding: 0px
      # - background-color: 'rgba(var(--color-theme),0)'
    grid:
      - grid-template-areas: '"i n" "i l"'
      - grid-template-columns: min-content auto
      - grid-template-rows: min-content min-content
    icon:
      - color: 'rgba(var(--color-theme),0.2)'
    img_cell:
      - background-color: 'rgba(var(--color-theme),0.05)'
      - border-radius: 50%
      - place-self: center
      - width: 42px
      - height: 42px
    name:
      - align-self: end
      - justify-self: start
      - font-weight: bold
      - font-size: 14px
      - margin-left: 12px
    label:
      - justify-self: start
      - align-self: start
      - font-weight: bolder
      - font-size: 12px
      - filter: opacity(40%)
      - margin-left: 12px
    state:
      - justify-self: start
      - align-self: start
      - font-weight: bolder
      - font-size: 12px
      - filter: opacity(40%)
      - margin-left: 12px

########################################################################################################

icon_info_bg:
  color: var(--google-grey)
  show_icon: true
  show_name: true
  show_label: true
  size: 20px
  custom_fields:
    notification: >
      [[[
        if (entity.state =='unavailable'){
          return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
        }
      ]]]
  state:
    - styles:
        custom_fields:
          notification:
            - border-radius: 50%
            - position: absolute
            - left: 38px
            - top: 8px
            - height: 16px
            - width: 16px
            - border: 2px solid var(--card-background-color)
            - font-size: 12px
            - line-height: 14px
            - background-color: >
                [[[
                  return "rgba(var(--color-red),1)";
                ]]]
      value: unavailable
  styles:
    card:
      - border-radius: var(--border-radius)
      - box-shadow: var(--box-shadow)
      - padding: 12px
    grid:
      - grid-template-areas: '"i n" "i l"'
      - grid-template-columns: min-content auto
      - grid-template-rows: min-content min-content
    icon:
      - color: 'rgba(var(--color-theme),0.2)'
    img_cell:
      - background-color: 'rgba(var(--color-theme),0.05)'
      - border-radius: 50%
      - place-self: center
      - width: 42px
      - height: 42px
    name:
      - align-self: end
      - justify-self: start
      - font-weight: bold
      - font-size: 14px
      - margin-left: 12px
    label:
      - justify-self: start
      - align-self: start
      - font-weight: bold
      - font-size: 12px
      - filter: opacity(40%)
      - margin-left: 12px
    state:
      - justify-self: start
      - align-self: start
      - font-weight: bold
      - font-size: 12px
      - filter: opacity(40%)
      - margin-left: 12px

########################################################################################################

list_items:
  styles:
    card:
      - box-shadow: none
      - padding: 0px
    grid:
      - grid-template-areas: '"item1 item2 item3"'
      - grid-template-columns: 1fr 1fr 1fr
      - grid-template-rows: min-content
      - column-gap: 7px

list_items_line:
  styles:
    card:
      - box-shadow: none
      - padding: 0px
    grid:
      - grid-template-areas: '"item1 item2 item3"'
      - grid-template-columns: max-content max-content max-content
      - grid-template-rows: min-content
      - column-gap: 8px

########################################################################################################

icon_info_line:
  show_icon: true
  show_name: false
  show_label: true
  size: 100%
  styles:
    card:
      - box-shadow: none
      - padding: 0px
    grid:
      - grid-template-areas: '"i l"'
      - grid-template-columns: max_content auto
      - grid-template-rows: min-content
    icon:
      - filter: opacity(40%)
    img_cell:
      - place-self: center
      - width: 14px
      - height: 24px
    label:
      - padding: 2px
      - justify-self: start
      - align-self: center
      - font-weight: bolder
      - font-size: 12px
      - margin-left: 0px
      - filter: opacity(40%)

########################################################################################################
#                                                                                                      #
#                                                CHIPS                                                 #
#                                                                                                      #
########################################################################################################

chips:
  tap_action:
    action: more-info
  show_icon: false
  show_name: false
  show_state: false
  show_label: true
  size: 80%
  styles:
    img_cell:
      - width: 24px
    card:
      - border-radius: 18px
      - box-shadow: var(--box-shadow)
      - height: 36px
      - width: auto
      - padding-left: 6px
      - padding-right: 6px
    grid:
      - grid-template-areas: '"l"'
    label:
      - justify-self: center
      - padding: 0px 6px
      - font-weight: bold
      - font-size: 14px

####################################################
#                                                  #
#                    CHIPS ICON                    #
#                                                  #
####################################################
chips_icon:
  template: chips
  show_icon: true
  size: 80%
  show_state: false
  variables:
    icon: "mdi:arrow-left"
  icon: '[[[ return variables.icon ]]]'
  styles:
    grid:
      - grid-template-areas: '"i l"'
    label:
      - justify-self: center
      - padding: 0px 6px
      - font-weight: bold
      - font-size: 14px

####################################################
#                                                  #
#                POWER CONSUMPTION                 #
#                                                  #
####################################################

chips_power_consumption:
  template: chips
  tap_action:
    action: navigate
    navigation_path: /lovelace/consommation
  label: |
    [[[
      var price = states['sensor.atome_price_conso_today'].state;
      return '‚ö° ' +  price + '‚Ç¨' ;
    ]]]

chips_power_consumption_price:
  template: chips
  show_icon: false
  show_state: false
  show_label: true
  tap_action:
    action: navigate
    navigation_path: /lovelace/consommation
  label: |
    [[[
      var price = states['sensor.atome_price_conso_today'].state;
      var conso = states['sensor.atome_daily'].state;
      return '‚ö° ' +  price + '‚Ç¨ ‚Ä¢ ' + conso + 'kWh';
    ]]]
####################################################
#                                                  #
#                   TEMPERATURE                    #
#                                                  #
####################################################

chips_temperature:
  template: chips
  tap_action:
      action: navigate
      navigation_path: /lovelace/temperature
  label: |
    [[[
      var inter = states['sensor.fibaro_multisensor_salon_temperature'].state;
      var exter = states['sensor.fibaro_multisensor_balcon_temperature'].state;
      var icon = '‚òÄÔ∏è';
      if (states['sensor.dark_sky_icon'].state == 'clear-day'){
        var icon = '‚òÄÔ∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'clear-night'){
        var icon = 'üåô';
      } else if(states['sensor.dark_sky_icon'].state == 'rain'){
        var icon = 'üåßÔ∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'snow'){
        var icon = '‚ùÑÔ∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'sleet'){
        var icon = '‚ùÑÔ∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'wind'){
        var icon = 'üå´Ô∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'fog'){
        var icon = 'üå´Ô∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'cloudy'){
        var icon = '‚òÅÔ∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'partly-cloudy-day'){
        var icon = '‚õÖÔ∏è';
      } else if(states['sensor.dark_sky_icon'].state == 'partly-cloudy-night'){
        var icon = '‚õÖ';
      }
      return icon + ' ' + exter + '¬∞ / ' +  inter + '¬∞' ;
    ]]]

####################################################
#                                                  #
#                 LOCALISATION                     #
#                                                  #
####################################################

chips_localisation_present:
  tap_action:
    action: navigate
    navigation_path: /lovelace/localisation
  label: |
    [[[
      var personnes_presentes = states['sensor.people_count_present'].state;
      return 'üè† ' +  personnes_presentes;
    ]]]
  template: chips
  
####################################################

chips_localisation_absent:
  tap_action:
    action: navigate
    navigation_path: /lovelace/localisation
  label: |
    [[[
      var personnes_presentes = states['sensor.people_count_absent'].state;
      return 'üö∂ ' +  personnes_presentes;
    ]]]
  template: chips

####################################################
  
chips_localisation_nuit:
  template: chips
  tap_action:
    action: navigate
    navigation_path: /lovelace/localisation
  label: |
    [[[
      var personnes_presentes = states['sensor.people_count_nuit'].state;
      return 'üåô ' +  personnes_presentes;
    ]]]
    
####################################################
#                                                  #
#                    RETURN                        #
#                                                  #
####################################################

chips_return:
  template: chips
  show_icon: true
  icon: 'mdi:arrow-left'
  size: 80%
  styles:
    grid:
      - grid-template-areas: '"i"'
  tap_action:
    action: navigate
    navigation_path: /lovelace/home


########################################################################################################
#                                                                                                      #
#                                               COVER                                                  #
#                                                                                                      #
########################################################################################################

cover:
  tap_action:
    action: more-info
  icon: |
    [[[
        var icon = 'mdi:window-shutter';
        if (entity.attributes.current_position == 0){
          var icon = 'mdi:window-shutter';
        } else
          var icon = 'mdi:window-shutter-open';
        return icon ;
    ]]]
  label: >-
    [[[ 
        if (entity.attributes.power_consumption != '0'){
          return 'Mouvement';
        }else{
          if (entity.attributes.current_position == 0){
            var etat = "Ferm√©";
          }else{
            var etat = "Ouvert" + ' ‚Ä¢ ' + (entity.attributes.current_position) + '%' ;
          }
          return etat ;
        }
    ]]]
  state:
    - operator: template
      value: >
        [[[
          return entity.attributes.current_position != 0;
        ]]]
      styles:
        icon:
          - color: 'rgba(var(--color-blue),1)'
        img_cell:
          - background-color: 'rgba(var(--color-blue),0.2)'

####################################################
#                                                  #
#                   COVER BUTTONS                  #
#                                                  #
####################################################

cover_buttons:
  variables:
    entity: "cover.fibaro_cover_balcon"
    name: "Default name"
  styles:
    card:
      - border-radius: var(--border-radius)
      - box-shadow: var(--box-shadow)
      - padding: 12px
    grid:
      - grid-template-areas: '"item1" "item2"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content  min-content
      - row-gap: 12px
  custom_fields:
    item1:
      card:
        entity: '[[[ return variables.entity ]]]'
        name: '[[[ return variables.name ]]]'
        tap_action:
          action: more-info
        template:
          - icon_info
          - cover
        type: 'custom:button-card'
    item2:
      card:
        template: list_items
        type: 'custom:button-card'
        custom_fields:
          item1:
            card:
              icon: 'mdi:arrow-down'
              tap_action:
                action: call-service
                service: cover.close_cover
                service_data:
                  entity_id: '[[[ return variables.entity ]]]'
              type: 'custom:button-card'
              template: widget_icon
          item2:
            card:
              icon: 'mdi:pause'
              tap_action:
                action: call-service
                service: cover.stop_cover
                service_data:
                  entity_id: '[[[ return variables.entity ]]]'
              type: 'custom:button-card'
              template: widget_icon
          item3:
            card:
              icon: 'mdi:arrow-up'
              tap_action:
                action: call-service
                service: cover.open_cover
                service_data:
                  entity_id: '[[[ return variables.entity ]]]'
              type: 'custom:button-card'
              template: widget_icon

########################################################################################################
#                                                                                                      #
#                                              LIGHT                                                   #
#                                                                                                      #
########################################################################################################

light:
  tap_action:
    action: toggle
  hold_action:
    action: more-info
  label: >-
    [[[ if (entity.state !='unavailable'){
          if (entity.state =='off'){
            var bri = Math.round(entity.attributes.brightness / 2.55);
            return 'Off';  
          }else{
            var bri = Math.round(entity.attributes.brightness / 2.55);
            return (bri ? bri : '0') + '%'; 
          }
        }else{
          return "Offline";
        }
    ]]]
  template: 
    - yellow

########################################################################################################

light_slider:
  variables:
    name: "Default name"
  show_icon: false
  show_name: false
  show_label: false
  styles:
    card:
      - border-radius: var(--border-radius)
      - box-shadow: var(--box-shadow)
      - padding: 12px
    grid:
      - grid-template-areas: '"item1" "item2"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content  min-content
      - row-gap: 12px
  state:
    - operator: template
      value: >
        [[[
          return entity.state == 'on'
        ]]]
      styles:
        card:
          - background-color: 'rgba(var(--color-background-yellow),var(--opacity-bg))'
  custom_fields:
    item1:
      card:
        entity: '[[[ return variables.entity ]]]'
        name: '[[[ return variables.name ]]]'
        template:
          - icon_info
          - light
        type: 'custom:button-card'
    item2:
      card:
        type: 'custom:slider-card'
        entity: '[[[ return variables.entity ]]]'
        radius: 14px
        height: 42px
        mainSliderColor: rgba(var(--color-yellow),1)
        secondarySliderColor: rgba(var(--color-yellow),0.2)
        mainSliderColorOff: rgba(var(--color-theme),0.05)
        secondarySliderColorOff: rgba(var(--color-theme),0.05)
        thumbHorizontalPadding: '0px'
        thumbVerticalPadding: '0px'
        thumbWidth: 0px
        card_mod:
        style: |
          ha-card {
            border-radius: 14px;
            box-shadow: none;
          }
########################################################################################################
#                                                                                                      #
#                                             GENERIC                                                  #
#                                                                                                      #
########################################################################################################

generic:
  label: >
      [[[return entity.state + " " + entity.attributes.unit_of_measurement]]]
  styles:
    icon:
      - color: 'rgba(var(--color-theme),0.9)'
    grid:
      - grid-template-areas: '"i l" "i n"'
      - grid-template-columns: min-content auto
      - grid-template-rows: min-content min-content
    label:
      - align-self: end
      - justify-self: start
      - font-weight: bold
      - font-size: 14px
      - margin-left: 12px
      - filter: opacity(100%)
    name:
      - justify-self: start
      - align-self: start
      - font-weight: bolder
      - font-size: 12px
      - filter: opacity(40%)
      - margin-left: 12px

########################################################################################################
#                                                                                                      #
#                                             OUTLET                                                   #
#                                                                                                      #
########################################################################################################

outlet:
  tap_action:
    action: more-info
  label: |-
    [[[ if (entity.state =='on')
       var etat = "On";
       else
      var etat = "Off";
    return etat ; ]]]
  template: 
    - yellow

####################################################
#                                                  #
#                     GRAPHE                       #
#                                                  #
####################################################

graph:
  variables:
    entity: "sensor.xiaomi_multisensor_salon_humidite"
    color: "var(--info-color)"
    name: "Default name"
  styles:
    card:
      - border-radius: var(--border-radius)
      - box-shadow: var(--box-shadow)
      - padding: 0px
    grid:
      - grid-template-areas: '"item1" "item2"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content  min-content
  custom_fields:
    item1:
      card:
        entity: '[[[ return variables.entity ]]]'
        name: '[[[ return variables.name ]]]'
        template: 
          - icon_info
          - generic
        styles:
          card:
            - padding: 12px
        type: 'custom:button-card'
    item2:
      card:
        type: 'custom:mini-graph-card'
        entities:
          - entity: '[[[ return variables.entity ]]]'
        line_color: '[[[ return variables.color ]]]'
        show:
          name: false
          icon: false
          legend: false
          state: false
        style: |
          ha-card {
            box-shadow: none;
            border-radius: var(--border-radius);
          }

########################################################################################################
#                                                                                                      #
#                                                WIDGET ICON                                           #
#                                                                                                      #
########################################################################################################

widget_icon:
  tap_action:
    action: toggle
  color: var(--google-grey)
  show_icon: true
  show_name: false
  size: 20px
  styles:
    card:
      - box-shadow: none
      - padding: 0px
      - background-color: 'rgba(var(--color-theme),0.05)'
      - border-radius: 14px
      - place-self: center
      - height: 42px
    grid:
      - grid-template-areas: '"i"'
    icon:
      - color: 'rgba(var(--color-theme),0.9)'

########################################################################################################
#                                                                                                      #
#                                             TITLE                                                    #
#                                                                                                      #
########################################################################################################

title:
  tap_action:
    action: none
  show_icon: false
  show_label: true
  show_name: true
  styles:
    card:
      - background-color: rgba(0,0,0,0)
      - box-shadow: none
      - height: auto
      - width: auto
      - margin-top: 12px
      - margin-left: 24px
      - margin-bottom: 0px
    grid:
      - grid-template-areas: '"n" "l"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content min-content
    name:
      - justify-self: start
      - font-weight: bold
      - font-size: '1.5rem'
    label:
      - justify-self: start
      - font-weight: bold
      - font-size: '1rem'
      - opacity: '0.4'

yellow:
  state:
    - styles:
        icon:
          - color: 'rgba(var(--color-yellow),1)'
        img_cell:
          - background-color: 'rgba(var(--color-yellow), 0.2)'
        card:
          - background-color: 'rgba(var(--color-background-yellow),var(--opacity-bg))'
        name:
          - color: 'rgba(var(--color-yellow-text),1)'
        label:
          - color: 'rgba(var(--color-yellow-text),1)'
      value: 'on'