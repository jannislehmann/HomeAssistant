# lovelace_gen
- title: Home
  icon: mdi:home
  path: home
  cards:
    # - !include ../cards/snow.yaml

    - type: vertical-stack
      cards:
      - !include 
        - ../includes/header.yaml
        - title: Home

      # Home Header
      - type: custom:simple-weather-card
        entity: weather.openweathermap
        name: " "
        primary_info:
          - wind_bearing
          - humidity
        secondary_info:
          - precipitation
          - precipitation_probability
        backdrop: true

      - type: custom:mushroom-template-card
        icon: mdi:alarm-light
        icon_color: black
        entity: alarm_control_panel.ha_alarm
        tap_action:
          action: more-info
        primary: Alarm
        {% raw %}
        secondary: "{{ states('alarm_control_panel.ha_alarm') }}"
        card_mod:
          style: |
            ha-card {
              --primary-text-color: white;
              --secondary-text-color: white;
              background:
                {% if is_state('alarm_control_panel.ha_alarm', 'disarmed') %}
                  #00FF7F
                {% elif is_state('alarm_control_panel.ha_alarm', 'armed_away') %}
                  orange
                {% elif is_state('alarm_control_panel.ha_alarm', 'armed_home') %}
                  gold
                {% elif is_state('alarm_control_panel.ha_alarm', 'triggered') %}
                  red
                {% else %}
                  gray
                {% endif %}
                ;
        {% endraw %}

      # Playing radio
      - type: conditional
        conditions:
          - entity: media_player.forked_daapd_server
            state: playing
        card:
          type: custom:mini-media-player
          entity: media_player.forked_daapd_server
          icon: mdi:radio
          name: Jannis
          tap_action:
            action: navigate
            navigation_path: audio
          hide:
            power: true
            volume: true
            prev: true
            next: true
            name: true
            progress: true
          card_mod:
            style: |
              ha-card {
                --ha-card-background: gray;
                --secondary-text-color: white;
                --mmp-icon-color: white;
              }

      # Person
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-entity-card
            entity: person.jannis
          - type: custom:mushroom-entity-card
            entity: person.hannah

      # Rooms
      - type: vertical-stack
        cards:
          - title: 'Räume'
            type: custom:mushroom-title-card
          - type: grid
            columns: 2
            square: false
            cards:
              {% for room in _global.rooms %}
                - type: custom:mushroom-template-card
                  primary: {{ room.name }}
                  secondary: |-
                    {% raw %}{{{% endraw %} states('{{ room.sensors[0].entity_id }}') {% raw %}}}{% endraw %} °C
                    {% if room.contact_sensors %}{% raw %}{% if (states.binary_sensor 
                      | selectattr('entity_id', 'in', {% endraw %} {{ room.contact_sensors | map(attribute='entity_id') | list }} {% raw %})
                      | selectattr('state', 'in', ('on', 'unavailable'))
                      | list
                      | count) == 0%} • Geschlossen{% else %} • Offen{% endif %}{% endraw %}{% endif %}
                  badge_icon: |-
                    {% raw %}{% if (states.binary_sensor 
                      | selectattr('entity_id', 'in', {% endraw %} {{ room.contact_sensors | map(attribute='entity_id') | list }} {% raw %})
                      | selectattr('state', 'in', ('on', 'unavailable'))
                      | list
                      | count) != 0%}mdi:door-open{% endif %}{% endraw %}
                  badge_color: red
                  icon: {{ room.icon }}
                  icon_color: |-
                    {% raw %}{% if (states.light 
                      | selectattr('entity_id', 'in', {% endraw %} {{ room.lights | map(attribute='entity_id') | list }} {% raw %})
                      | selectattr('state', 'in', ('on'))
                      | list
                      | count) != 0%}orange{% endif %}{% endraw %}
                  multiline_secondary: false
                  tap_action:
                    action: navigate
                    navigation_path: {{ room.name | lower | replace(" ", "_") }}
                  double_tap_action:
                    action: call-service
                    service: light.turn_off
                    service_data:
                      entity_id: {{ room.lights | map(attribute='entity_id') | list }}
                    haptic: success
              {% endfor %}     
      
      # Audio, Glenn
      - type: vertical-stack
        cards:
          - title: Sonstiges
            type: custom:mushroom-title-card
          
          - type: grid
            columns: 2
            square: false
            cards:
              - type: custom:mushroom-template-card
                primary: Glenn
                icon: phu:roborock
                icon_color: |-
                  {% raw %}
                  {% if is_state('vacuum.glenn', 'cleaning') %}
                  green
                  {% endif %}
                  {% endraw %}
                tap_action:
                  action: navigate
                  navigation_path: glenn
              - type: custom:mushroom-template-card
                primary: Audio
                icon: mdi:speaker-multiple
                tap_action:
                  action: navigate
                  navigation_path: audio
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      .shape {
                        --icon-animation: beat 1.3s ease-out infinite both;
                        transform-origin: 50% 60%;
                      }
                      @keyframes beat {
                        0% { transform: scale(1); }
                        10% { transform: scale(1.1); }
                        17% { transform: scale(1.05); }
                        33% { transform: scale(1.25); }
                        60% { transform: scale(1); }
                      }

              - type: custom:mushroom-template-card
                primary: Aufgaben
                icon: mdi:calendar-check
                tap_action:
                  action: navigate
                  navigation_path: chores

              - type: custom:mushroom-template-card
                primary: Büro
                secondary: |-
                  {% raw %}
                  {{ states('sensor.temperature_office') }} °C
                  {% if states('binary_sensor.contact_office') in ("unavailable", "on")%}• Offen{% else %} • Geschlossen{% endif %}
                  {% endraw %}
                badge_icon: |-
                  {% raw %}
                  {% if states('binary_sensor.contact_office') in ("unavailable", "on") %}mdi:door-open{% endif %}
                  {% endraw %}
                badge_color: red
                icon: mdi:bug
                icon_color: |-
                  {% raw %}
                  {% if is_state('light.room_office', 'on') %}orange{% endif %}
                  {% endraw %}
                multiline_secondary: false
                tap_action:
                  action: navigate
                  navigation_path: buero
                double_tap_action:
                  action: call-service
                  service: light.turn_off
                  service_data:
                    entity_id: light.room_office
                  haptic: success
